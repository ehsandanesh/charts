# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

## Overrides for generated resource names
# See templates/_helpers.tpl
# nameOverride:
# fullnameOverride:
# namespaceOverride:

# For FQDN resolving of the master service. Change this value to match your existing configuration.
# ref: https://github.com/kubernetes/dns/blob/master/docs/specification.md
clusterZone: "cluster.local"

master:
  httpsKeyStore:
      enable: true
      httpPort: 8080
      path: "/var/jenkins_keystore"
      fileName: "keystore.jks"
      password: "changeit"
      # Convert keystore.jks files content to base64 ( cat keystore.jks | base64 ) and put the output here
      jenkinsKeyStoreBase64Encoded: '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' 
  # Used for label app.kubernetes.io/component
  componentName: "jenkins-master"
  image: "jenkins/jenkins"
  tag: "lts"
  imagePullPolicy: "Always"
  imagePullSecretName:
  # Optionally configure lifetime for master-container
  lifecycle:
  #  postStart:
  #    exec:
  #      command:
  #      - "uname"
  #      - "-a"
  numExecutors: 0
  customJenkinsLabels: []
  # configAutoReload requires UseSecurity is set to true:
  useSecurity: true

  # enables configuration done directly via XML files
  # People who want to configure Jenkins via https://github.com/jenkinsci/configuration-as-code-plugin only can set it to false
  enableXmlConfig: true
  # Allows to configure different SecurityRealm using Jenkins XML
  securityRealm: |-
    <securityRealm class="hudson.security.LegacySecurityRealm"/>
  # Allows to configure different AuthorizationStrategy using Jenkins XML
  authorizationStrategy: |-
     <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
       <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
     </authorizationStrategy>
  hostNetworking: false
  # When enabling LDAP or another non-Jenkins identity source, the built-in admin account will no longer exist.
  # Since the AdminUser is used by configAutoReload, in order to use configAutoReload you must change the
  # .master.adminUser to a valid username on your LDAP (or other) server.  This user does not need
  # to have administrator rights in Jenkins (the default Overall:Read is sufficient) nor will it be granted any
  # additional rights.  Failure to do this will cause the sidecar container to fail to authenticate via SSH and enter
  # a restart loop.  Likewise if you disable the non-Jenkins identity store and instead use the Jenkins internal one,
  # you should revert master.adminUser to your preferred admin user:
  adminUser: "admin"
  # adminPassword: <defaults to random>
  # adminSshKey: <defaults to auto-generated>
  # If CasC auto-reload is enabled, an SSH (RSA) keypair is needed.  Can either provide your own, or leave unconfigured to allow a random key to be auto-generated.
  # If you supply your own, it is recommended that the values file that contains your key not be committed to source control in an unencrypted format
  rollingUpdate: {}
  # Ignored if Persistence is enabled
  # maxSurge: 1
  # maxUnavailable: 25%
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"
  # Environment variables that get added to the init container (useful for e.g. http_proxy)
  # initContainerEnv:
  #   - name: http_proxy
  #     value: "http://192.168.64.1:3128"
  # containerEnv:
  #   - name: http_proxy
  #     value: "http://192.168.64.1:3128"
  # Set min/max heap here if needed with:
  # javaOpts: "-Xms512m -Xmx512m"
  # jenkinsOpts: ""
  # jenkinsUrl: ""
  # If you set this prefix and use ingress controller then you might want to set the ingress path below
  # jenkinsUriPrefix: "/jenkins"
  # Enable pod security context (must be `true` if runAsUser or fsGroup are set)
  usePodSecurityContext: true
  # Set runAsUser to 1000 to let Jenkins run as non-root user 'jenkins' which exists in 'jenkins/jenkins' docker image.
  # When setting runAsUser to a different value than 0 also set fsGroup to the same value:
  # runAsUser: <defaults to 0>
  # fsGroup: <will be omitted in deployment if runAsUser is 0>
  servicePort: 4443
  targetPort: 4443
  # For minikube, set this to NodePort, elsewhere use LoadBalancer
  # Use ClusterIP if your setup includes ingress controller
  serviceType: LoadBalancer
  # Jenkins master service annotations
  serviceAnnotations: {}
  # Jenkins master custom labels
  deploymentLabels: {}
  #   foo: bar
  #   bar: foo
  # Jenkins master service labels
  serviceLabels: {}
  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https
  # Put labels on Jenkins master pod
  podLabels: {}
  # Used to create Ingress record (should used with ServiceType: ClusterIP)
  # nodePort: <to set explicitly, choose port between 30000-32767
  # Enable Kubernetes Liveness and Readiness Probes
  # ~ 2 minutes to allow Jenkins to restart when upgrading plugins. Set ReadinessTimeout to be shorter than LivenessTimeout.
  healthProbes: true
  healthProbesLivenessTimeout: 5
  healthProbesReadinessTimeout: 5
  healthProbeLivenessPeriodSeconds: 10
  healthProbeReadinessPeriodSeconds: 10
  healthProbeLivenessFailureThreshold: 5
  healthProbeReadinessFailureThreshold: 3
  healthProbeLivenessInitialDelay: 90
  healthProbeReadinessInitialDelay: 60
  slaveListenerPort: 50000
  slaveHostPort:
  disabledAgentProtocols:
    - JNLP-connect
    - JNLP2-connect
  csrf:
    defaultCrumbIssuer:
      enabled: true
      proxyCompatability: true
  cli: false
  # Kubernetes service type for the JNLP agent service
  # slaveListenerServiceType is the Kubernetes Service type for the JNLP agent service,
  # either 'LoadBalancer', 'NodePort', or 'ClusterIP'
  # Note if you set this to 'LoadBalancer', you *must* define annotations to secure it. By default
  # this will be an external load balancer and allowing inbound 0.0.0.0/0, a HUGE
  # security risk:  https://github.com/kubernetes/charts/issues/1341
  slaveListenerServiceType: "ClusterIP"
  slaveListenerServiceAnnotations: {}
  slaveKubernetesNamespace:

  # Example of 'LoadBalancer' type of agent listener with annotations securing it
  # slaveListenerServiceType: LoadBalancer
  # slaveListenerServiceAnnotations:
  #   service.beta.kubernetes.io/aws-load-balancer-internal: "True"
  #   service.beta.kubernetes.io/load-balancer-source-ranges: "172.0.0.0/8, 10.0.0.0/8"

  # LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to
  # set allowed inbound rules on the security group assigned to the master load balancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  # Optionally assign a known public LB IP
  # loadBalancerIP: 1.2.3.4
  # Optionally configure a JMX port
  # requires additional javaOpts, ie
  # javaOpts: >
  #   -Dcom.sun.management.jmxremote.port=4000
  #   -Dcom.sun.management.jmxremote.authenticate=false
  #   -Dcom.sun.management.jmxremote.ssl=false
  # jmxPort: 4000
  # Optionally configure other ports to expose in the master container
  extraPorts:
  # - name: BuildInfoProxy
  #   port: 9000

  # List of plugins to be install during Jenkins master start
  installPlugins:
    - kubernetes:1.18.2
    - workflow-job:2.33
    - workflow-aggregator:2.6
    - credentials-binding:1.19
    - git:3.11.0

  # Enable to always override the installed plugins with the values of 'master.installPlugins' on upgrade or redeployment.
  # overwritePlugins: true
  # Enable HTML parsing using OWASP Markup Formatter Plugin (antisamy-markup-formatter), useful with ghprb plugin.
  # The plugin is not installed by default, please update master.installPlugins.
  enableRawHtmlMarkupFormatter: false
  # Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  scriptApproval:
  #  - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  #  - "new groovy.json.JsonSlurperClassic"
  # List of groovy init scripts to be executed during Jenkins master start
  initScripts:
  #  - |
  #    print 'adding global pipeline libraries, register properties, bootstrap jobs...'
  # Kubernetes secret that contains a 'credentials.xml' for Jenkins
  # credentialsXmlSecret: jenkins-credentials
  # Kubernetes secret that contains files to be put in the Jenkins 'secrets' directory,
  # useful to manage encryption keys used for credentials.xml for instance (such as
  # master.key and hudson.util.Secret)
  # secretsFilesSecret: jenkins-secrets
  # Jenkins XML job configs to provision
  jobs: {}
  #  test: |-
  #    <<xml here>>

  # Below is the implementation of Jenkins Configuration as Code.  Add a key under configScripts for each configuration area,
  # where each corresponds to a plugin or section of the UI.  Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the section a meaningful name.  The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens.  The keys become the name of a configuration yaml file on the master in
  # /var/jenkins_home/casc_configs (by default) and will be processed by the Configuration as Code Plugin.  The lines after each |
  # become the content of the configuration yaml file.  The first line after this is a JCasC root element, eg jenkins, credentials,
  # etc.  Best reference is https://<jenkins_url>/configuration-as-code/reference.  The example below creates a welcome message:
  JCasC:
    enabled: false
    defaultConfig: false
    pluginVersion: "1.27"
    # it's only used when plugin version is <=1.18 for later version the
    # configuration as code support plugin is no longer needed
    supportPluginVersion: "1.18"
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: Welcome to our CI\CD server.  This Jenkins is configured and managed 'as code'.

  # Optionally specify additional init-containers
  customInitContainers: []
  # - name: custom-init
  #   image: "alpine:3.7"
  #   imagePullPolicy: Always
  #   command: [ "uname", "-a" ]

  sidecars:
    configAutoReload:
      # If enabled: true, Jenkins Configuration as Code will be reloaded on-the-fly without a reboot.  If false or not-specified,
      # jcasc changes will cause a reboot and will only be applied at the subsequent start-up.  Auto-reload uses the Jenkins CLI
      # over SSH to reapply config when changes to the configScripts are detected.  The admin user (or account you specify in
      # master.adminUser) will have a random SSH private key (RSA 4096) assigned unless you specify adminSshKey.  This will be saved to a k8s secret.
      enabled: false
      image: shadwell/k8s-sidecar:0.0.2
      imagePullPolicy: IfNotPresent
      resources: {}
        #   limits:
        #     cpu: 100m
        #     memory: 100Mi
        #   requests:
        #     cpu: 50m
        #     memory: 50Mi
      # SSH port value can be set to any unused TCP port.  The default, 1044, is a non-standard SSH port that has been chosen at random.
      # Is only used to reload jcasc config from the sidecar container running in the Jenkins master pod.
      # This TCP port will not be open in the pod (unless you specifically configure this), so Jenkins will not be
      # accessible via SSH from outside of the pod.  Note if you use non-root pod privileges (runAsUser & fsGroup),
      # this must be > 1024:
      sshTcpPort: 1044
      # folder in the pod that should hold the collected dashboards:
      folder: "/var/jenkins_home/casc_configs"
      # If specified, the sidecar will search for JCasC config-maps inside this namespace.
      # Otherwise the namespace in which the sidecar is running will be used.
      # It's also possible to specify ALL to search in all namespaces:
      # searchNamespace:

    # Allows you to inject additional/other sidecars
    other:
    ## The example below runs the client for https://smee.io as sidecar container next to Jenkins,
    ## that allows to trigger build behind a secure firewall.
    ## https://jenkins.io/blog/2019/01/07/webhook-firewalls/#triggering-builds-with-webhooks-behind-a-secure-firewall
    ##
    ## Note: To use it you should go to https://smee.io/new and update the url to the generete one.
    # - name: smee
    #   image: docker.io/twalter/smee-client:1.0.2
    #   args: ["--port", "{{ .Values.master.servicePort }}", "--path", "/github-webhook/", "--url", "https://smee.io/new"]
    #   resources:
    #     limits:
    #       cpu: 50m
    #       memory: 128Mi
    #     requests:
    #       cpu: 10m
    #       memory: 32Mi
  # Node labels and tolerations for pod assignment
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  tolerations: []
  # Leverage a priorityClass to ensure your pods survive resource shortages
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  # priorityClass: system-cluster-critical
  podAnnotations: {}

  # The below two configuration-related values are deprecated and replaced by Jenkins Configuration as Code (see above
  # JCasC key).  They will be deleted in an upcoming version.
  customConfigMap: false
  # By default, the configMap is only used to set the initial config the first time
  # that the chart is installed.  Setting `overwriteConfig` to `true` will overwrite
  # the jenkins config with the contents of the configMap every time the pod starts.
  # This will also overwrite all init scripts
  overwriteConfig: false

  # By default, the Jobs Map is only used to set the initial jobs the first time
  # that the chart is installed.  Setting `overwriteJobs` to `true` will overwrite
  # the jenkins jobs configuration with the contents of Jobs every time the pod starts.
  overwriteJobs: false

  ingress:
    enabled: false
    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
    apiVersion: "extensions/v1beta1"
    labels: {}
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # Set this path to jenkinsUriPrefix above or use annotations to rewrite path
    # path: "/jenkins"
    # configures the hostname e.g. jenkins.example.com
    hostName:
    tls:
    # - secretName: jenkins.cluster.local
    #   hosts:
    #     - jenkins.cluster.local

  # If you're running on GKE and need to configure a backendconfig
  # to finish ingress setup, use the following values.
  # Docs: https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig
  backendconfig:
    enabled: false
    apiVersion: "extensions/v1beta1"
    name:
    labels: {}
    annotations: {}
    spec: {}

  # Openshift route
  route:
    enabled: false
    labels: {}
    annotations: {}
    # path: "/jenkins"

  additionalConfig: {}

  # master.hostAliases allows for adding entries to Pod /etc/hosts:
  # https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []
  # - ip: 192.168.50.50
  #   hostnames:
  #     - something.local
  # - ip: 10.0.50.50
  #   hostnames:
  #     - other.local

  # Expose Prometheus metrics
  prometheus:
    # If enabled, add the prometheus plugin to the list of plugins to install
    # https://plugins.jenkins.io/prometheus
    enabled: false
    # Additional labels to add to the ServiceMonitor object
    serviceMonitorAdditionalLabels: {}
    # Set a custom namespace where to deploy ServiceMonitor resource
    # serviceMonitorNamespace: monitoring
    scrapeInterval: 60s
    # This is the default endpoint used by the prometheus plugin
    scrapeEndpoint: /prometheus
    # Additional labels to add to the PrometheusRule object
    alertingRulesAdditionalLabels: {}
    # An array of prometheus alerting rules
    # See here: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
    # The `groups` root object is added by default, simply add the rule entries
    alertingrules: []

  # Can be used to disable rendering master test resources when using helm template
  testEnabled: true

agent:
  enabled: true
  image: "jenkins/jnlp-slave"
  tag: "3.27-1"
  customJenkinsLabels: []
  # name of the secret to be used for image pulling
  imagePullSecretName:
  componentName: "jenkins-slave"
  privileged: false
  resources:
    requests:
      cpu: "512m"
      memory: "512Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"
  # You may want to change this to true while testing a new image
  alwaysPullImage: false
  # Controls how agent pods are retained after the Jenkins build completes
  # Possible values: Always, Never, OnFailure
  podRetention: "Never"
  # You can define the volumes that you want to mount for this container
  # Allowed types are: ConfigMap, EmptyDir, HostPath, Nfs, Pod, Secret
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes
  # Pod-wide ennvironment, these vars are visible to any container in the agent pod
  envVars:
  # - name: PATH
  #   value: /usr/local/bin
  volumes:
  # - type: Secret
  #   secretName: mysecret
  #   mountPath: /var/myapp/mysecret
  # - type: EmptyDir
  #   mountPath: "/var/lib/containers"
  #   memory: false
  nodeSelector: {}
  # Key Value selectors. Ex:
  # jenkins-agent: v1

  # Executed command when side container gets started
  command:
  args:
  # Side container name
  sideContainerName: "jnlp"
  # Doesn't allocate pseudo TTY by default
  TTYEnabled: false
  # Max number of spawned agent
  containerCap: 10
  # Pod name
  podName: "default"
  # Allows the Pod to remain active for reuse until the configured number of
  # minutes has passed since the last step was executed on it.
  idleMinutes: 0
  # Raw yaml template for the Pod. For example this allows usage of toleration for agent pods.
  # https://github.com/jenkinsci/kubernetes-plugin#using-yaml-to-define-pod-templates
  # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  yamlTemplate: ""
  # yamlTemplate: |-
  #   apiVersion: v1
  #   kind: Pod
  #   spec:
  #     tolerations:
  #     - key: "key"
  #       operator: "Equal"
  #       value: "value"

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim:
  ## jenkins data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  annotations: {}
  accessMode: "ReadWriteOnce"
  size: "8Gi"
  volumes:
  #  - name: nothing
  #    emptyDir: {}
  mounts:
  #  - mountPath: /var/nothing
  #    name: nothing
  #    readOnly: true

networkPolicy:
  # Enable creation of NetworkPolicy resources.
  enabled: false
  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
  # For Kubernetes v1.7, use 'networking.k8s.io/v1'
  apiVersion: networking.k8s.io/v1

## Install Default RBAC roles and bindings
rbac:
  create: true

serviceAccount:
  create: true
  # The name of the service account is autogenerated by default
  name:
  annotations: {}

serviceAccountAgent:
  # Specifies whether a ServiceAccount should be created
  create: false
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  annotations: {}

## Backup cronjob configuration
## Ref: https://github.com/maorfr/kube-tasks
backup:
  # Backup must use RBAC
  # So by enabling backup you are enabling RBAC specific for backup
  enabled: false
  # Used for label app.kubernetes.io/component
  componentName: "backup"
  # Schedule to run jobs. Must be in cron time format
  # Ref: https://crontab.guru/
  schedule: "0 2 * * *"
  annotations:
    # Example for authorization to AWS S3 using kube2iam
    # Can also be done using environment variables
    iam.amazonaws.com/role: "jenkins"
  image:
    repository: "maorfr/kube-tasks"
    tag: "0.2.0"
  # Additional arguments for kube-tasks
  # Ref: https://github.com/maorfr/kube-tasks#simple-backup
  extraArgs: []
  # Add existingSecret for AWS credentials
  existingSecret: {}
  ## Example for using an existing secret
   # jenkinsaws:
  ## Use this key for AWS access key ID
     # awsaccesskey: jenkins_aws_access_key
  ## Use this key for AWS secret access key
     # awssecretkey: jenkins_aws_secret_key
  # Add additional environment variables
  env:
  # Example environment variable required for AWS credentials chain
  - name: "AWS_REGION"
    value: "us-east-1"
  resources:
    requests:
      memory: 1Gi
      cpu: 1
    limits:
      memory: 1Gi
      cpu: 1
  # Destination to store the backup artifacts
  # Supported cloud storage services: AWS S3, Minio S3, Azure Blob Storage, Google Cloud Storage
  # Additional support can added. Visit this repository for details
  # Ref: https://github.com/maorfr/skbn
  destination: "s3://jenkins-data/backup"
checkDeprecation: true
